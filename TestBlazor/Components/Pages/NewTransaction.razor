@page "/transaction"
@inject NavigationManager NavigationManager
@using System.Net.Http.Json
@inject IJSRuntime JS

@inject HttpClient Http

<div class="main-box">
    <input class="email-input" @bind="inputedEmail" type="text" id="email" name="email" placeholder="Enter email" />
    <input class="amount-input" @bind="inputedValue" type="text" id="amount" name="amount" placeholder="Enter amount" />
    <input class="descryption-input" @bind="descry" type="text" id="descryption" name="descryption" placeholder="Enter descryption" />
    <a>@testmessage</a>
    <button @onclick="VerifyTransaction">Confrim</button>
</div>


@code {
    [Inject]
    public NavigationManager navigationManager { get; set; }
    private string inputedEmail;
    private decimal inputedValue;
    private string errorMessage;
    private int ReciverId;
    private string testmessage;
    private string descry;
    private async Task VerifyTransaction()
    {
        var login = await JS.InvokeAsync<string>("localStorage.getItem", "login");
        Console.WriteLine("mada");
        var transactions = await Http.GetFromJsonAsync<TransactionsResponse>($"/BankApi/account/{inputedEmail}/getidemail");
        var user = await Http.GetFromJsonAsync<TransactionsResponse>($"/BankApi/account/{login}/getlogin");
        
        if (transactions != null && transactions.id != null && transactions.id != user.id)
        {
            ReciverId = transactions.id;
            Console.WriteLine("DDAD");
            SendTransaction();
        }


    }
    private async Task SendTransaction()
    {
        Console.WriteLine("hjmgbhmmbn");
        errorMessage = "";
        testmessage = "DD";
        var login = await JS.InvokeAsync<string>("localStorage.getItem", "login");
        Console.WriteLine("mada");
        var transactions = await Http.GetFromJsonAsync<TransactionsResponse>($"/BankApi/account/{inputedEmail}/getidemail");
        var user = await Http.GetFromJsonAsync<TransactionsResponse>($"/BankApi/account/{login}/getlogin");
        var data = new TransactionDTO { SendAccountId = ReciverId, ReciveAccountId = user.id, amount = (int)inputedValue, descryption = descry };
        try
        {
            Console.WriteLine("oadas");
            var response = await Http.PostAsJsonAsync("BankApi/transaction/send", data);
            Console.WriteLine(response.StatusCode);
            if (response.IsSuccessStatusCode)
            {
                Console.WriteLine("full sucess");
                NavigationManager.NavigateTo("/home/", true);
            }
            else if (response.StatusCode == System.Net.HttpStatusCode.Unauthorized)
            {
                Console.WriteLine("DADA: " + response.StatusCode);
                errorMessage = "Nieprawidlowe dane";
                testmessage = errorMessage;
            }
            else
            {
                Console.WriteLine("PAPA: " + response.StatusCode);
                errorMessage = $"Błąd: {response.StatusCode}";
                testmessage = errorMessage;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("EX: " + ex.Message);
            errorMessage = $"Wyjątek: {ex.Message}";
            testmessage = errorMessage;
        }
    }
    
}
